package com.example.juncookapp.logic.monitorimport android.content.Contextimport android.net.ConnectivityManagerimport android.net.NetworkRequestimport android.os.Buildclass NetworkMonitor(context: Context) {    val networkMonitor = NetworkMonitor(context)    private val connectivityManager =        context.getSystemService(Context.CONNECTIVITY_SERVICE) as ConnectivityManager    fun isNetworkAvailable(): Boolean {        val networkInfo = connectivityManager.activeNetworkInfo        return networkInfo != null && networkInfo.isConnected    }    fun registerNetworkCallback(networkCallback: ConnectivityManager.NetworkCallback) {        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {            connectivityManager.registerDefaultNetworkCallback(networkCallback)            networkMonitor.registerNetworkCallback(networkCallback)        } else {            val builder = NetworkRequest.Builder()            connectivityManager.registerNetworkCallback(builder.build(), networkCallback)            networkMonitor.registerNetworkCallback(networkCallback)        }    }    fun unregisterNetworkCallback(networkCallback: ConnectivityManager.NetworkCallback) {        connectivityManager.unregisterNetworkCallback(networkCallback)        networkMonitor.unregisterNetworkCallback(networkCallback)    }}